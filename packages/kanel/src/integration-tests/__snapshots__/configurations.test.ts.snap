// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Integration tests for various configurations > should respect the configuration 1`] = `
{
  "example/models/ComplexTable.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "import type { Id } from './CustomTypesTable';",
    "import type { Id } from './SomeOtherTable';",
    "",
    "/** Identifier type for complex_table */",
    "export type Id = number & { __flavor?: 'Id' };",
    "",
    "/** Represents the table test.complex_table */",
    "export default interface ComplexTable {",
    "  /** Database type: pg_catalog.int4 */",
    "  id: Id;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  custom_types_id: Id | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id: Id | null;",
    "",
    "  /** Database type: pg_catalog.varchar */",
    "  name: string;",
    "",
    "  /** Database type: pg_catalog.text */",
    "  description: string | null;",
    "",
    "  /** Database type: pg_catalog.jsonb */",
    "  metadata: unknown | null;",
    "",
    "  /** Database type: pg_catalog.text[] */",
    "  tags: string[] | null;",
    "",
    "  /** Database type: pg_catalog.timestamptz */",
    "  created_at: Date | null;",
    "}",
    "",
    "/** Represents the initializer for the table test.complex_table */",
    "export interface ComplexTableInitializer {",
    "  /**",
    "   * Database type: pg_catalog.int4",
    "   * Default value: nextval('test.complex_table_id_seq'::regclass)",
    "   */",
    "  id?: Id;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  custom_types_id?: Id | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id?: Id | null;",
    "",
    "  /** Database type: pg_catalog.varchar */",
    "  name: string;",
    "",
    "  /** Database type: pg_catalog.text */",
    "  description?: string | null;",
    "",
    "  /** Database type: pg_catalog.jsonb */",
    "  metadata?: unknown | null;",
    "",
    "  /**",
    "   * Database type: pg_catalog.text[]",
    "   * Default value: '{}'::text[]",
    "   */",
    "  tags?: string[] | null;",
    "",
    "  /**",
    "   * Database type: pg_catalog.timestamptz",
    "   * Default value: now()",
    "   */",
    "  created_at?: Date | null;",
    "}",
    "",
    "/** Represents the mutator for the table test.complex_table */",
    "export interface ComplexTableMutator {",
    "  /** Database type: pg_catalog.int4 */",
    "  id?: Id;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  custom_types_id?: Id | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id?: Id | null;",
    "",
    "  /** Database type: pg_catalog.varchar */",
    "  name?: string;",
    "",
    "  /** Database type: pg_catalog.text */",
    "  description?: string | null;",
    "",
    "  /** Database type: pg_catalog.jsonb */",
    "  metadata?: unknown | null;",
    "",
    "  /** Database type: pg_catalog.text[] */",
    "  tags?: string[] | null;",
    "",
    "  /** Database type: pg_catalog.timestamptz */",
    "  created_at?: Date | null;",
    "}",
    "",
  ],
  "example/models/CustomTypesTable.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "import bytea from 'postgres-bytea';",
    "import type { default as SomeEnum } from './SomeEnum';",
    "import type { default as SomeDomain } from './SomeDomain';",
    "import type { default as SomeRange } from './SomeRange';",
    "import type { default as SomeComposite } from './SomeComposite';",
    "",
    "/** Identifier type for custom_types_table */",
    "export type Id = number & { __flavor?: 'Id' };",
    "",
    "/** Represents the table test.custom_types_table */",
    "export default interface CustomTypesTable {",
    "  /** Database type: pg_catalog.int4 */",
    "  id: Id;",
    "",
    "  /** Database type: pg_catalog.tsvector */",
    "  search_vector: Set<string> | null;",
    "",
    "  /** Database type: pg_catalog.bytea */",
    "  binary_data: bytea | null;",
    "",
    "  /** Database type: pg_catalog.int8 */",
    "  big_number: BigInt | null;",
    "",
    "  /** Database type: pg_catalog.bpchar */",
    "  fixed_char: string | null;",
    "",
    "  /** Database type: public.citext */",
    "  case_insensitive_text: string | null;",
    "",
    "  /** Database type: test.some_enum */",
    "  enum_column: SomeEnum | null;",
    "",
    "  /** Database type: test.some_domain */",
    "  domain_column: SomeDomain | null;",
    "",
    "  /** Database type: test.some_range */",
    "  range_column: SomeRange | null;",
    "",
    "  /** Database type: test.some_composite */",
    "  composite_column: SomeComposite | null;",
    "",
    "  /** Database type: pg_catalog.text[] */",
    "  text_array: string[] | null;",
    "",
    "  /** Database type: test.some_enum[] */",
    "  enum_array: SomeEnum[] | null;",
    "",
    "  /** Database type: pg_catalog.int4[] */",
    "  int_array: number[] | null;",
    "",
    "  /** Database type: pg_catalog.timestamptz */",
    "  created_at: Date | null;",
    "",
    "  /** Database type: pg_catalog.timestamptz */",
    "  updated_at: Date | null;",
    "",
    "  /** Database type: pg_catalog.bool */",
    "  is_active: boolean | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  priority: number | null;",
    "}",
    "",
    "/** Represents the initializer for the table test.custom_types_table */",
    "export interface CustomTypesTableInitializer {",
    "  /**",
    "   * Database type: pg_catalog.int4",
    "   * Default value: nextval('test.custom_types_table_id_seq'::regclass)",
    "   */",
    "  id?: Id;",
    "",
    "  /** Database type: pg_catalog.tsvector */",
    "  search_vector?: Set<string> | null;",
    "",
    "  /** Database type: pg_catalog.bytea */",
    "  binary_data?: bytea | null;",
    "",
    "  /** Database type: pg_catalog.int8 */",
    "  big_number?: BigInt | null;",
    "",
    "  /** Database type: pg_catalog.bpchar */",
    "  fixed_char?: string | null;",
    "",
    "  /** Database type: public.citext */",
    "  case_insensitive_text?: string | null;",
    "",
    "  /** Database type: test.some_enum */",
    "  enum_column?: SomeEnum | null;",
    "",
    "  /** Database type: test.some_domain */",
    "  domain_column?: SomeDomain | null;",
    "",
    "  /** Database type: test.some_range */",
    "  range_column?: SomeRange | null;",
    "",
    "  /** Database type: test.some_composite */",
    "  composite_column?: SomeComposite | null;",
    "",
    "  /** Database type: pg_catalog.text[] */",
    "  text_array?: string[] | null;",
    "",
    "  /** Database type: test.some_enum[] */",
    "  enum_array?: SomeEnum[] | null;",
    "",
    "  /** Database type: pg_catalog.int4[] */",
    "  int_array?: number[] | null;",
    "",
    "  /**",
    "   * Database type: pg_catalog.timestamptz",
    "   * Default value: now()",
    "   */",
    "  created_at?: Date | null;",
    "",
    "  /**",
    "   * Database type: pg_catalog.timestamptz",
    "   * Default value: CURRENT_TIMESTAMP",
    "   */",
    "  updated_at?: Date | null;",
    "",
    "  /**",
    "   * Database type: pg_catalog.bool",
    "   * Default value: true",
    "   */",
    "  is_active?: boolean | null;",
    "",
    "  /**",
    "   * Database type: pg_catalog.int4",
    "   * Default value: 0",
    "   */",
    "  priority?: number | null;",
    "}",
    "",
    "/** Represents the mutator for the table test.custom_types_table */",
    "export interface CustomTypesTableMutator {",
    "  /** Database type: pg_catalog.int4 */",
    "  id?: Id;",
    "",
    "  /** Database type: pg_catalog.tsvector */",
    "  search_vector?: Set<string> | null;",
    "",
    "  /** Database type: pg_catalog.bytea */",
    "  binary_data?: bytea | null;",
    "",
    "  /** Database type: pg_catalog.int8 */",
    "  big_number?: BigInt | null;",
    "",
    "  /** Database type: pg_catalog.bpchar */",
    "  fixed_char?: string | null;",
    "",
    "  /** Database type: public.citext */",
    "  case_insensitive_text?: string | null;",
    "",
    "  /** Database type: test.some_enum */",
    "  enum_column?: SomeEnum | null;",
    "",
    "  /** Database type: test.some_domain */",
    "  domain_column?: SomeDomain | null;",
    "",
    "  /** Database type: test.some_range */",
    "  range_column?: SomeRange | null;",
    "",
    "  /** Database type: test.some_composite */",
    "  composite_column?: SomeComposite | null;",
    "",
    "  /** Database type: pg_catalog.text[] */",
    "  text_array?: string[] | null;",
    "",
    "  /** Database type: test.some_enum[] */",
    "  enum_array?: SomeEnum[] | null;",
    "",
    "  /** Database type: pg_catalog.int4[] */",
    "  int_array?: number[] | null;",
    "",
    "  /** Database type: pg_catalog.timestamptz */",
    "  created_at?: Date | null;",
    "",
    "  /** Database type: pg_catalog.timestamptz */",
    "  updated_at?: Date | null;",
    "",
    "  /** Database type: pg_catalog.bool */",
    "  is_active?: boolean | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  priority?: number | null;",
    "}",
    "",
  ],
  "example/models/SomeComposite.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "/** Represents the compositeType test.some_composite */",
    "export default interface SomeComposite {",
    "  /** Database type: pg_catalog.text */",
    "  name: string | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  value: number | null;",
    "}",
    "",
  ],
  "example/models/SomeDomain.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "/** Represents the domain test.some_domain */",
    "type SomeDomain = string;",
    "",
    "export default SomeDomain;",
    "",
  ],
  "example/models/SomeEnum.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "/** Represents the enum test.some_enum */",
    "enum SomeEnum {",
    "  value1 = 'value1',",
    "  value2 = 'value2',",
    "};",
    "",
    "export default SomeEnum;",
    "",
  ],
  "example/models/SomeMaterializedView.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "/** Represents the materializedView test.some_materialized_view */",
    "export default interface SomeMaterializedView {",
    "  /** Database type: pg_catalog.int4 */",
    "  id: number | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id: number | null;",
    "}",
    "",
  ],
  "example/models/SomeOtherTable.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "/** Identifier type for some_other_table */",
    "export type Id = number & { __flavor?: 'Id' };",
    "",
    "/** Represents the table test.some_other_table */",
    "export default interface SomeOtherTable {",
    "  /** Database type: pg_catalog.int4 */",
    "  id: Id;",
    "}",
    "",
    "/** Represents the initializer for the table test.some_other_table */",
    "export interface SomeOtherTableInitializer {",
    "  /** Database type: pg_catalog.int4 */",
    "  id: Id;",
    "}",
    "",
    "/** Represents the mutator for the table test.some_other_table */",
    "export interface SomeOtherTableMutator {",
    "  /** Database type: pg_catalog.int4 */",
    "  id?: Id;",
    "}",
    "",
  ],
  "example/models/SomeRange.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "/** Represents the range test.some_range */",
    "type SomeRange = string;",
    "",
    "export default SomeRange;",
    "",
  ],
  "example/models/SomeTable.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "import type { Id } from './SomeOtherTable';",
    "",
    "/** Represents the table test.some_table */",
    "export default interface SomeTable {",
    "  /** Database type: pg_catalog.int4 */",
    "  id: number | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id: Id | null;",
    "}",
    "",
    "/** Represents the initializer for the table test.some_table */",
    "export interface SomeTableInitializer {",
    "  /** Database type: pg_catalog.int4 */",
    "  id?: number | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id?: Id | null;",
    "}",
    "",
    "/** Represents the mutator for the table test.some_table */",
    "export interface SomeTableMutator {",
    "  /** Database type: pg_catalog.int4 */",
    "  id?: number | null;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id?: Id | null;",
    "}",
    "",
  ],
  "example/models/SomeView.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "/** Represents the view test.some_view */",
    "export default interface SomeView {",
    "  /** Database type: pg_catalog.int4 */",
    "  id: number;",
    "",
    "  /** Database type: pg_catalog.int4 */",
    "  some_other_table_id: number;",
    "}",
    "",
  ],
  "example/models/some_function.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "export interface some_function_params {",
    "}",
    "",
  ],
  "example/models/some_procedure.ts": [
    "// @generated",
    "// This file is automatically generated by Kanel. Do not modify manually.",
    "",
    "export interface some_procedure_params {",
    "}",
    "",
  ],
}
`;
